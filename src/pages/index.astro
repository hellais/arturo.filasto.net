---
import { Content as ShortBio } from "../content/shortbio.md";
---

<html lang="en">
  <head>
    <title>Arturo Filastò</title>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content="r2" />
    <style>
      :root {
        --bg-color: rgb(30, 15, 13);
      }
      body {
        margin: 0;
        background-color: var(--bg-color);
      }
      .hero-bg {
        position: absolute;
        top: 0px;
        left: 0px;
        z-index: 1;
      }
      .vignette {
        border-radius: 30%;
        display: inline-block;
        position: relative;
        background-color: var(--bg-color);
      }
      .vignette canvas {
        border-radius: 30%;
        display: block;
        border: 1px solid var(--bg-color);
      }
      .vignette:after {
        content: "";
        display: block;
        width: 100%;
        height: 100%;
        border-radius: 30%;
        position: absolute;
        top: 0;
        left: 0;
        box-shadow:
          inset 10px 24px 40px 0px var(--bg-color),
          inset -10px -24px 40px 0px var(--bg-color),
          inset 20px -10px 40px 0px var(--bg-color),
          inset -20px 10px 40px 0px var(--bg-color);
      }
      #energy-ball {
        position: absolute;
        top: 1%;
        left: 2%;
        background: radial-gradient(
          hsla(0, 80%, 100%, 1) 0%,
          hsla(0, 80%, 100%, 0.9) 30%,
          hsla(0, 80%, 100%, 0) 60%
        );
        mix-blend-mode: difference;
        width: 400px;
        height: 400px;
        border-radius: 50%;
        border: none;
        z-index: 999999;
        pointer-events: none;
      }
    </style>
  </head>
  <body>
    <div class="text-center pt-64">
      <div id="energy-ball"></div>
      <h1
        class="text-6xl font-bold text-off-white"
        style="position: relative;z-index:9999;"
      >
        Arturo Filastò
      </h1>
      <div class="flex justify-center py-6">
        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
          <a
            href="mailto:arturo [nospam-be-at] filasto [nospam-be-dot] net[remove-this]"
            id="nospamplease"
          >
            <svg
              stroke="currentColor"
              fill="currentColor"
              stroke-width="0"
              viewBox="0 0 1024 1024"
              height="32px"
              width="32px"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                d="M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0 0 68.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z"
              ></path></svg
            >
          </a>
        </div>
        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
          <a href="https://twitter.com/hellais">
            <svg
              stroke="currentColor"
              fill="currentColor"
              stroke-width="0"
              viewBox="0 0 1024 1024"
              height="32px"
              width="32px"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                d="M928 254.3c-30.6 13.2-63.9 22.7-98.2 26.4a170.1 170.1 0 0 0 75-94 336.64 336.64 0 0 1-108.2 41.2A170.1 170.1 0 0 0 672 174c-94.5 0-170.5 76.6-170.5 170.6 0 13.2 1.6 26.4 4.2 39.1-141.5-7.4-267.7-75-351.6-178.5a169.32 169.32 0 0 0-23.2 86.1c0 59.2 30.1 111.4 76 142.1a172 172 0 0 1-77.1-21.7v2.1c0 82.9 58.6 151.6 136.7 167.4a180.6 180.6 0 0 1-44.9 5.8c-11.1 0-21.6-1.1-32.2-2.6C211 652 273.9 701.1 348.8 702.7c-58.6 45.9-132 72.9-211.7 72.9-14.3 0-27.5-.5-41.2-2.1C171.5 822 261.2 850 357.8 850 671.4 850 843 590.2 843 364.7c0-7.4 0-14.8-.5-22.2 33.2-24.3 62.3-54.4 85.5-88.2z"
              ></path></svg
            >
          </a>
        </div>
        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
          <a href="https://linkedin.com/arturofb">
            <svg
              stroke="currentColor"
              fill="currentColor"
              stroke-width="0"
              viewBox="0 0 1024 1024"
              height="32px"
              width="32px"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                d="M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM349.3 793.7H230.6V411.9h118.7v381.8zm-59.3-434a68.8 68.8 0 1 1 68.8-68.8c-.1 38-30.9 68.8-68.8 68.8zm503.7 434H675.1V608c0-44.3-.8-101.2-61.7-101.2-61.7 0-71.2 48.2-71.2 98v188.9H423.7V411.9h113.8v52.2h1.6c15.8-30 54.5-61.7 112.3-61.7 120.2 0 142.3 79.1 142.3 181.9v209.4z"
              ></path></svg
            >
          </a>
        </div>
        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
          <a href="https://github.com/hellais">
            <svg
              stroke="currentColor"
              fill="currentColor"
              stroke-width="0"
              viewBox="0 0 1024 1024"
              height="32px"
              width="32px"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                d="M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"
              ></path></svg
            >
          </a>
        </div>
      </div>
      <div class="flex justify-center py-6">
        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
        <a href="/blog">My blog</a>
        </div>

        <div
          class="z-50 text-off-white px-2 border-r-2 border-b-2 rounded border-solid border-transparent hover:border-off-white"
        >
        <a href="/about">About me</a>
        </div>
      </div>
    </div>
    <div class="hero-bg">
      <div class="vignette">
        <div class="flex justify-center">
          <canvas
            id="mainCanvas"
            style="width: 100%;height: 500px;display: block;"></canvas>
        </div>
      </div>
    </div>
    <div
      class="relative mt-[100px] w-full px-6 py-4 md:max-w-3xl md:mx-auto lg:max-w-4xl lg:pt-16 lg:pb-28"
    >
      <article class="prose lg:prose-xl prose-invert">
        <ShortBio />
      </article>
    </div>
    <script type="text/javascript">
      const simpleAntiSpam = () => {
        let lameAntiSpam = document.getElementById("nospamplease");
        let mail = lameAntiSpam.getAttribute("href");
        lameAntiSpam.setAttribute(
          "href",
          mail
            .replace(" [nospam-be-at] ", "@")
            .replace(" [nospam-be-dot] ", ".")
            .replace("[remove-this]", "")
        );
      };

      const particleAnimation = () => {
        const canvas = document.getElementById("mainCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = 500;

        let mouseX = window.innerWidth / 2;
        let mouseY = window.innerHeight / 2;

        let colors = [
          "rgb(229,13,14)", // bright red
          "rgb(125,1,10)", // muted red
        ];

        let particles = [];
        const numberOfParticles = 420;

        class Particle {
          constructor() {
            this.colors = colors;
            this.x = Math.random() * canvas.width;
            this.y = Math.random() * canvas.height;
            this.size = Math.random() * 5 + 1;
            this.speedX = Math.random() - 0.5;
            this.speedY = Math.random() - 0.5;
            this.colorIdx = Math.round(Math.random() * colors.length);
          }

          update() {
            this.x += this.speedX;
            let dX = (this.x - mouseX) * 0.001;
            this.x -= dX;
            this.y += this.speedY;
            let dY = (this.x - mouseY) * 0.001;
            this.y -= dY;
            if (this.size > 0.3) this.size -= 0.1;
          }

          draw() {
            ctx.fillStyle = this.colors[this.colorIdx];
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
            ctx.fill();
          }
        }

        function init() {
          for (let i = 0; i < numberOfParticles; i++) {
            particles.push(new Particle());
          }
        }

        function handleParticles() {
          for (let i = 0; i < particles.length; i++) {
            particles[i].update();
            particles[i].draw();

            for (let j = i; j < particles.length; j++) {
              const dx = particles[i].x - particles[j].x;
              const dy = particles[i].y - particles[j].y;
              const distance = Math.sqrt(dx * dx + dy * dy);
              if (distance < 100) {
                ctx.beginPath();
                ctx.strokeStyle = colors[particles[i].colorIdx];
                ctx.lineWidth = 0.2;
                ctx.moveTo(particles[i].x, particles[i].y);
                ctx.lineTo(particles[j].x, particles[j].y);
                ctx.stroke();
              }
            }

            if (particles[i].size <= 0.3) {
              particles.splice(i, 1);
              i--;
              particles.push(new Particle());
            }
          }
        }

        function animateGradient() {
          const r0 = 10 * 2 + 10 * Math.sin(t * 0.002);
          const r1 = 100 * 2 + 80 * Math.cos(t * 0.002);
          const y = Math.min(mouseY - 150, 500);
          let gradient = ctx.createRadialGradient(mouseX, y, r0, mouseX, y, r1);
          gradient.addColorStop(0, `hsl(5, 66%, 19%)`);
          gradient.addColorStop(0.8, `hsl(42, 97%, 88%)`);
          gradient.addColorStop(1, `hsl(7, 40%, 8%)`);
          ctx.fillStyle = gradient;
          ctx.fillRect(0, 0, canvas.width, canvas.height);
        }

        let lsa = 5;
        let lsb = 6;
        let lsd = Math.PI / 2;

        function animateDots(time) {
          let size = 2 + 1 * Math.sin(t * 0.002);
          for (let idx = 0; idx < 100; idx++) {
            const x =
              canvas.width / 2 +
              (canvas.width / 2 - 100) *
                Math.sin(lsa * (t + 80 * idx) * 0.0003 + lsd);
            const y =
              canvas.height / 2 +
              (canvas.height / 2 - 50) *
                Math.sin(lsb * (t + 80 * idx) * 0.0003);
            ctx.fillStyle = "rgb(30, 15, 13)";
            ctx.beginPath();
            ctx.arc(x, y, size, 0, Math.PI * 2);
            ctx.fill();
          }
        }

        let t = 0;
        function animate(time) {
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          animateGradient();
          handleParticles();
          animateDots(time);
          t += 1;
          requestAnimationFrame(animate);
        }

        init();
        animate();

        let hc = document.getElementById("energy-ball");
        window.addEventListener("mousemove", function (e) {
          mouseX = e.screenX;
          mouseY = e.screenY;
          const y = Math.min(e.clientY - 200, 200);
          hc.style.left = e.clientX - 200 + "px";
          hc.style.top = y + "px";
        });
      };

      document.addEventListener("DOMContentLoaded", () => {
        simpleAntiSpam();
        particleAnimation();
      });
    </script>
  </body>
</html>
